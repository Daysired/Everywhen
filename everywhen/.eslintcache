[{"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/index.js":"1","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/reportWebVitals.js":"2","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/App.js":"3","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/services/index.js":"4","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Nav.jsx":"5","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Mood.jsx":"6","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Improve.jsx":"7","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Whatworked.jsx":"8","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Highlight.jsx":"9","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Vent.jsx":"10","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Well.jsx":"11","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessTime.jsx":"12","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Date.jsx":"13"},{"size":589,"mtime":1607352987037,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607114205652,"results":"16","hashOfConfig":"15"},{"size":2923,"mtime":1607528139741,"results":"17","hashOfConfig":"15"},{"size":227,"mtime":1607356314334,"results":"18","hashOfConfig":"15"},{"size":342,"mtime":1607488121120,"results":"19","hashOfConfig":"15"},{"size":3125,"mtime":1607529027038,"results":"20","hashOfConfig":"15"},{"size":1899,"mtime":1607530452614,"results":"21","hashOfConfig":"15"},{"size":2121,"mtime":1607530371033,"results":"22","hashOfConfig":"15"},{"size":1849,"mtime":1607530503308,"results":"23","hashOfConfig":"15"},{"size":1425,"mtime":1607530408940,"results":"24","hashOfConfig":"15"},{"size":1374,"mtime":1607377098466,"results":"25","hashOfConfig":"15"},{"size":1700,"mtime":1607502289226,"results":"26","hashOfConfig":"15"},{"size":249,"mtime":1607528492977,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1oxtwlj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/index.js",[],["58","59"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/reportWebVitals.js",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/App.js",["60","61"],"import axios from \"axios\";\nimport Nav from \"./components/Nav\";\nimport Well from \"./components/Well\";\nimport WellnessTime from \"./components/WellnessTime\";\nimport Mood from \"./components/Mood\";\nimport Highlight from \"./components/Highlight\";\nimport Vent from \"./components/Vent\";\nimport Whatworked from \"./components/Whatworked\";\nimport Improve from \"./components/Improve\";\nimport Date from \"./components/Date\";\nimport { Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { baseURL, config } from \"./services\";\nimport './App.css';\n\nfunction App() {\n  const [info, setInfo] = useState([]);\n  const [toggleFetch, setToggleFetch] = useState(false);\n  const [tabs, setTabs] = useState({\n    mood: true,\n    vent: false,\n    highlight: false,\n    whatworked: false,\n    improve: false,\n  })\n  \n    useEffect(() => {\n        async function getWellnessTime() {\n            let response = await axios.get(baseURL, config);\n          setInfo(response.data.records);\n          console.log(response)\n          \n        }\n        getWellnessTime();\n    }, [toggleFetch]);\n  \n  let handleClick = (tabName) => {\n    setTabs ({\n      mood: false,\n      vent: false,\n      highlight: false,\n      whatworked: false,\n      improve: false,\n    })\n    console.log(tabs[tabName])\n    setTabs(prevTabs => ({\n      ...prevTabs,\n      [tabName]:!tabs[tabName]\n    }))\n  }\nconsole.log(tabs.mood)\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Route exact path=\"/\">\n\n      </Route>\n      <Route path='/well-time'>\n        {info.map((wellnessTime) => (\n          <WellnessTime\n            wellnessTime={wellnessTime}\n            key={wellnessTime.id}\n            setToggleFetch={setToggleFetch}\n            handleClick={handleClick}\n          />\n        ))}\n       \n        {tabs.mood && <Mood info={info} setToggleFetch={setToggleFetch} />}\n        {tabs.vent && <Vent info={info} setToggleFetch={setToggleFetch} />}\n        {tabs.highlight && <Highlight info={info} setToggleFetch={setToggleFetch} />}\n        {tabs.whatworked && <Whatworked info={info} setToggleFetch={setToggleFetch} />}\n        {tabs.improve && <Improve info={info}  setToggleFetch={setToggleFetch} />}\n      </Route>\n\n      {/* <Route path='/wellness/:id'>\n        <Well info={info} setToggleFetch={setToggleFetch} />\n      </Route>\n\n      <Route path='/mood/'>\n        <Mood info={info}  setToggleFetch={setToggleFetch} />\n      </Route>\n\n      <Route path='/vent/'>\n        <Vent info={info} setToggleFetch={setToggleFetch} />\n      </Route>\n\n      <Route path='/highlight/'>\n        <Highlight info={info} setToggleFetch={setToggleFetch} />\n      </Route>\n\n      <Route path='/whatworked/'>\n        <Whatworked info={info} setToggleFetch={setToggleFetch} /> \n      </Route>\n\n      <Route path='/improve/'>\n        <Improve info={info} setToggleFetch={setToggleFetch} />\n      </Route> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/services/index.js",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Nav.jsx",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Mood.jsx",["62"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Improve.jsx",["63"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Whatworked.jsx",["64"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Highlight.jsx",["65"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Vent.jsx",["66"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Well.jsx",["67","68"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { baseURL, config } from \"../services\";\n\n\nconst Well = (props) => {\n    let { id } = useParams();\n    const [currentWell, setCurrentWell] = useState({});\n\n    // api call for a single item\n    useEffect(() => {\n        let getWell = async () => {\n            let response = await axios.get(`${baseURL}/${id}`, config);\n            setCurrentWell(response.data);\n        };\n        getWell();\n    }, []);\n\n    // Using .find because we only want to return one item\n    let currentWelly = props.wellnessTime.find((wellness) => {\n        return wellness.id === id;\n    });\n    console.log(currentWelly);\n\n   \n    return (\n        <div>\n            {/* {currentWelly.fields && (\n                <div>\n                    <h1>{currentWelly.fields.mood}</h1>\n                    <h4>Highlight: {currentWelly.fields.highlight}</h4>\n                    <h4>Vent: {currentWelly.fields.vent}</h4>\n                    <h4>Coping Strategies: {currentWelly.fields.copingStrategies}\n                    </h4>\n                    <h4>What Worked: {currentWelly.fields.whatWorked}</h4>\n                    <h4>What to Improve: {currentWelly.fields.improve}</h4>\n                </div>\n            )} */}\n        </div>\n    );\n  };\n  \n    export default Well;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessTime.jsx",["69","70","71","72","73","74","75","76","77","78"],"import React from \"react\";\nimport { Tabs, Tab, AppBar } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Mood from \"./Mood\";\nimport Highlight from \"./Highlight\";\nimport Vent from \"./Vent\";\nimport Whatworked from \"./Whatworked\";\nimport Improve from \"./Improve\";\nimport { Link } from \"react-router-dom\";\nimport \"./WellnessTime.css\"\n\n\nfunction WellnessTime ({handleClick}) {\n  // const [selectedTab, setSelectedTab] = React.useState(0);\n\n  // const handleChange = (event, newValue) => {\n  //   setSelectedTab(newValue);\n  // }\n\n  // return (\n  //   <>\n  //     <AppBar position=\"static\">\n  //       <Tabs value={selectedTab} onChange={handleChange}>\n  //         <Tab label=\"Mood\" />\n  //         <Tab label=\"Highlight\" />\n  //         <Tab label=\"Vent\" />\n  //         <Tab label=\"Whatworked\" />\n  //         <Tab label=\"Improve\" />\n  //       </Tabs>\n  //     </AppBar>\n  //     {selectedTab === 0 && <Mood />}\n  //     {selectedTab === 1 && <Highlight />}\n  //     {selectedTab === 2 && <Vent />}\n  //     {selectedTab === 3 && <Whatworked />}\n  //     {selectedTab === 4 && <Improve />}\n  //   </>\n  // )\n\n\n\n\n \n  return (\n    <div className=\"tabs\">\n      <div onClick ={()=> handleClick('mood')}>\n        <h4>Mood</h4>\n    \t</div>\n  \n      <div onClick={() => handleClick('highlight')}>\n      <h4>Highlight</h4>\n      </div> \n     \n\n      <div onClick={() => handleClick('vent')}>\n       <h4>Vent</h4>\n      </div>\n\n    <div onClick={() => handleClick('whatworked')}>\n        <h4>What Worked</h4>\n    </div>\n\n    <div onClick={() => handleClick('improve')}>\n      <h4>What to Improve</h4> \n      </div>\n      \n   </div>\n  );\n};\n\nexport default WellnessTime;\n\n ","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Date.jsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":12},{"ruleId":"83","severity":1,"message":"87","line":10,"column":8,"nodeType":"85","messageId":"86","endLine":10,"endColumn":12},{"ruleId":"88","severity":1,"message":"89","line":39,"column":6,"nodeType":"90","endLine":39,"endColumn":37,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"89","line":21,"column":6,"nodeType":"90","endLine":21,"endColumn":37,"suggestions":"92"},{"ruleId":"88","severity":1,"message":"89","line":21,"column":6,"nodeType":"90","endLine":21,"endColumn":37,"suggestions":"93"},{"ruleId":"88","severity":1,"message":"89","line":20,"column":6,"nodeType":"90","endLine":20,"endColumn":37,"suggestions":"94"},{"ruleId":"88","severity":1,"message":"89","line":19,"column":6,"nodeType":"90","endLine":19,"endColumn":37,"suggestions":"95"},{"ruleId":"83","severity":1,"message":"96","line":9,"column":12,"nodeType":"85","messageId":"86","endLine":9,"endColumn":23},{"ruleId":"88","severity":1,"message":"97","line":18,"column":8,"nodeType":"90","endLine":18,"endColumn":10,"suggestions":"98"},{"ruleId":"83","severity":1,"message":"99","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":14},{"ruleId":"83","severity":1,"message":"100","line":2,"column":16,"nodeType":"85","messageId":"86","endLine":2,"endColumn":19},{"ruleId":"83","severity":1,"message":"101","line":2,"column":21,"nodeType":"85","messageId":"86","endLine":2,"endColumn":27},{"ruleId":"83","severity":1,"message":"102","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":20},{"ruleId":"83","severity":1,"message":"103","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":12},{"ruleId":"83","severity":1,"message":"104","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":17},{"ruleId":"83","severity":1,"message":"105","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":12},{"ruleId":"83","severity":1,"message":"106","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":18},{"ruleId":"83","severity":1,"message":"107","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":15},{"ruleId":"83","severity":1,"message":"108","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":14},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Well' is defined but never used.","Identifier","unusedVar","'Date' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.wellnesTime.length'. Either include it or remove the dependency array.","ArrayExpression",["111"],["112"],["113"],["114"],["115"],"'currentWell' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["116"],"'Tabs' is defined but never used.","'Tab' is defined but never used.","'AppBar' is defined but never used.","'makeStyles' is defined but never used.","'Mood' is defined but never used.","'Highlight' is defined but never used.","'Vent' is defined but never used.","'Whatworked' is defined but never used.","'Improve' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"117","fix":"119"},{"desc":"117","fix":"120"},{"desc":"117","fix":"121"},{"desc":"117","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [props.wellnessTime, params.id, props.wellnesTime.length]",{"range":"125","text":"126"},{"range":"127","text":"126"},{"range":"128","text":"126"},{"range":"129","text":"126"},{"range":"130","text":"126"},"Update the dependencies array to be: [id]",{"range":"131","text":"132"},[1323,1354],"[props.wellnessTime, params.id, props.wellnesTime.length]",[686,717],[690,721],[641,672],[564,595],[531,533],"[id]"]