[{"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/index.js":"1","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/reportWebVitals.js":"2","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/App.js":"3","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/services/index.js":"4","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Nav.jsx":"5","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Mood.jsx":"6","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Coping.jsx":"7","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Improve.jsx":"8","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Whatworked.jsx":"9","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Highlight.jsx":"10","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Vent.jsx":"11","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Well.jsx":"12","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessTime.jsx":"13"},{"size":589,"mtime":1607352987037,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607114205652,"results":"16","hashOfConfig":"15"},{"size":2735,"mtime":1607484572585,"results":"17","hashOfConfig":"15"},{"size":227,"mtime":1607356314334,"results":"18","hashOfConfig":"15"},{"size":342,"mtime":1607484502681,"results":"19","hashOfConfig":"15"},{"size":728,"mtime":1607462919286,"results":"20","hashOfConfig":"15"},{"size":121,"mtime":1607354448800,"results":"21","hashOfConfig":"15"},{"size":1811,"mtime":1607459517218,"results":"22","hashOfConfig":"15"},{"size":1862,"mtime":1607459177936,"results":"23","hashOfConfig":"15"},{"size":1825,"mtime":1607459377350,"results":"24","hashOfConfig":"15"},{"size":1753,"mtime":1607459475700,"results":"25","hashOfConfig":"15"},{"size":1374,"mtime":1607377098466,"results":"26","hashOfConfig":"15"},{"size":701,"mtime":1607470268397,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1oxtwlj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/index.js",[],["62","63"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/reportWebVitals.js",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/App.js",["64"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/services/index.js",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Nav.jsx",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Mood.jsx",["65","66","67","68"],"import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst Mood = (props) => {\n  const [showMore, setShowMore] = useState(false)\n  const handleSubmit = (e) => {\n    setShowMore(!showMore)\n  }\n\n  const myMood = props.info.map((mood) => {\n    return (\n      <h3>Mood:{mood.fields.mood}</h3>\n    )\n  })\n  return (\n    <div>\n      {myMood}\n       <button onClick={handleSubmit}>\n        Show More \n     </button>\n      {showMore ? \n        <div>\n        <h5>hi</h5>\n        <h5>hello</h5> </div>:\n        <p></p>\n      } \n     </div>\n  );\n} \n\n\n\n\n\nexport default Mood;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Coping.jsx",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Improve.jsx",["69"],"import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\n\nconst Improve = (props) => {\n  const myImprovement = props.info.map((fix) => {\n    return (\n      <h3>What to Improve:{fix.fields.improve}</h3>\n    )\n  })\n  const [improve, setImprove] = useState(\"\");\n\n  const history = useHistory();\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find((wellnessTime) => wellnessTime.id === params.id);\n      setImprove(wellnessTime.fields.improve);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const fields = {\n      improve,\n    };\n\n    if (params.id) {\n      const ventURL = `${baseURL}/${params.id}`;\n      await axios.put(ventURL, { fields }, config);\n    } else {\n      await axios.post(baseURL, { fields }, config);\n    }\n    props.setToggleFetch((prev) => !prev);\n    history.push(\"/\");\n  };\n  \n  const [showMore, setShowMore] = useState(false)\n  const handleClick = (e) => {\n    setShowMore(!showMore)\n  }\n\n  return (\n    <div>\n      {myImprovement}\n      <button onClick={handleClick}>\n       Add Entry \n     </button>\n      { showMore ?\n      <div Class=\"card\">\n        <form onSubmit={handleSubmit}>\n        <h3>What To Improve</h3>\n          <label htmlFor=\"improve\">Improve</label>\n          <input\n            name=\"improve\"\n            type=\"text\"\n            value={improve}\n            onChange={(e) => setImprove(e.target.value)}\n          />\n          <button type=\"submit\">Make Entry</button>\n        </form>\n      </div>: <p></p>\n      }\n    </div>\n  );\n}\n\nexport default Improve;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Whatworked.jsx",["70"],"import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\n\nconst Whatworked = (props) => {\n  const myWork = props.info.map((work) => {\n    return (\n      <h3>What Worked:{work.fields.whatWorked}</h3>\n    )\n  })\n\n  const [whatWorked, setWhatWorked] = useState(\"\");\n\n  const history = useHistory();\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find((wellnessTime) => wellnessTime.id === params.id);\n      setWhatWorked(wellnessTime.fields.whatWorked);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const fields = {\n      whatWorked,\n    };\n\n    if (params.id) {\n      const ventURL = `${baseURL}/${params.id}`;\n      await axios.put(ventURL, { fields }, config);\n    } else {\n      await axios.post(baseURL, { fields }, config);\n    }\n    props.setToggleFetch((prev) => !prev);\n    history.push(\"/\");\n  };\n  \n  const [showMore, setShowMore] = useState(false)\n  const handleClick = (e) => {\n    setShowMore(!showMore)\n  }\n\n  return (\n    <div>\n      {myWork}\n\n    <button onClick={handleClick}>\n       Add Entry \n     </button>\n      { showMore ?\n        <div Class=\"card\">\n          <form onSubmit={handleSubmit}>\n            <h3>What Worked</h3>\n            <label htmlFor=\"whatworked\">What Worked</label>\n            <input\n              name=\"whatworked\"\n              type=\"text\"\n              value={whatWorked}\n              onChange={(e) => setWhatWorked(e.target.value)}\n            />\n            <button type=\"submit\">Make Entry</button>\n          </form>\n        </div> : <p></p>\n      } \n    </div>\n  );\n}\n\n\nexport default Whatworked;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Highlight.jsx",["71"],"import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\n\nconst Highlight = (props) => {\n  const myHighlight = props.info.map((high) => {\n    return (\n      <h3>Highlight:{high.fields.highlight}</h3>\n    )\n  })\n  const [highlight, setHighlight] = useState(\"\");\n\n  const history = useHistory();\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find((wellnessTime) => wellnessTime.id === params.id);\n      setHighlight(wellnessTime.fields.highlight);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const fields = {\n      highlight,\n    };\n\n    if (params.id) {\n      const ventURL = `${baseURL}/${params.id}`;\n      await axios.put(ventURL, { fields }, config);\n    } else {\n      await axios.post(baseURL, { fields }, config);\n    }\n    props.setToggleFetch((prev) => !prev);\n    history.push(\"/mood/\");\n  };\n\n  const [showMore, setShowMore] = useState(false)\n  const handleClick = (e) => {\n    setShowMore(!showMore)\n  }\n\n  return (\n    <div>\n      {myHighlight}\n      <button onClick={handleClick}>\n       Add Entry \n     </button>\n      { showMore ?\n      <div Class=\"card\">\n        <form onSubmit={handleSubmit}>\n        <h3>Highlight</h3>\n          <label htmlFor=\"highlight\">Highlight</label>\n          <input\n            name=\"highlight\"\n            type=\"text\"\n            value={highlight}\n            onChange={(e) => setHighlight(e.target.value)}\n          />\n          <button type=\"submit\">Make Entry</button>\n        </form>\n      </div>: <p></p>\n      }\n    </div>\n  );\n}\nexport default Highlight;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Vent.jsx",["72"],"import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\n\nconst Vent = (props) => {\n  const myVent = props.info.map((release) => {\n    return (\n      <h3>Vent:{release.fields.vent}</h3>\n    )\n  })\n  const [vent, setVent] = useState(\"\");\n\n  const history = useHistory();\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find((wellnessTime) => wellnessTime.id === params.id);\n      setVent(wellnessTime.fields.vent);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const fields = {\n      vent,\n    };\n\n    if (params.id) {\n      const ventURL = `${baseURL}/${params.id}`;\n      await axios.put(ventURL, { fields }, config);\n    } else {\n      await axios.post(baseURL, { fields }, config);\n    }\n    props.setToggleFetch((prev) => !prev);\n    history.push(\"/\");\n  };\n\n  const [showMore, setShowMore] = useState(false)\n  const handleClick = (e) => {\n    setShowMore(!showMore)\n  }\n\n  return (\n    <div>\n      {myVent}\n      <button onClick={handleClick}>\n       Add Entry \n     </button>\n      { showMore ?\n      <div Class=\"card\">\n        <form onSubmit={handleSubmit}>\n        <h3>VENT THAT SH*T!</h3>\n          <label htmlFor=\"vent\">vent</label>\n          <input\n            name=\"vent\"\n            type=\"text\"\n            value={vent}\n            onChange={(e) => setVent(e.target.value)}\n          />\n          <button type=\"submit\">Make Entry</button>\n        </form>\n      </div>: <p></p>\n      }\n    </div>\n  );\n}\n\nexport default Vent;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Well.jsx",["73","74"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { baseURL, config } from \"../services\";\n\n\nconst Well = (props) => {\n    let { id } = useParams();\n    const [currentWell, setCurrentWell] = useState({});\n\n    // api call for a single item\n    useEffect(() => {\n        let getWell = async () => {\n            let response = await axios.get(`${baseURL}/${id}`, config);\n            setCurrentWell(response.data);\n        };\n        getWell();\n    }, []);\n\n    // Using .find because we only want to return one item\n    let currentWelly = props.wellnessTime.find((wellness) => {\n        return wellness.id === id;\n    });\n    console.log(currentWelly);\n\n   \n    return (\n        <div>\n            {/* {currentWelly.fields && (\n                <div>\n                    <h1>{currentWelly.fields.mood}</h1>\n                    <h4>Highlight: {currentWelly.fields.highlight}</h4>\n                    <h4>Vent: {currentWelly.fields.vent}</h4>\n                    <h4>Coping Strategies: {currentWelly.fields.copingStrategies}\n                    </h4>\n                    <h4>What Worked: {currentWelly.fields.whatWorked}</h4>\n                    <h4>What to Improve: {currentWelly.fields.improve}</h4>\n                </div>\n            )} */}\n        </div>\n    );\n  };\n  \n    export default Well;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessTime.jsx",["75"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./WellnessTime.css\"\n\nfunction WellnessTime({handleClick}) {\n  \n  return (\n    <div className=\"tabs\">\n      <div onClick ={()=> handleClick('mood')}>\n      <h4>Mood</h4>\n      </div>\n        \n  \n      <div onClick={() => handleClick('highlight')}>\n      <h4>Highlight</h4>\n      </div> \n     \n\n      <div onClick={() => handleClick('vent')}>\n        <h4>Vent</h4>\n      </div>\n\n      <div onClick={() => handleClick('whatworked')}>\n        <h4>What Worked</h4>\n      </div>\n\n      <div onClick={() => handleClick('improve')}>\n        <h4>What to Improve</h4> \n      </div>\n\n     </div>\n  );\n};\n\nexport default WellnessTime;\n\n ",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":14},{"ruleId":"80","severity":1,"message":"84","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":19},{"ruleId":"80","severity":1,"message":"85","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":20},{"ruleId":"80","severity":1,"message":"86","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":11},{"ruleId":"80","severity":1,"message":"87","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":23,"column":6,"nodeType":"90","endLine":23,"endColumn":37,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"89","line":24,"column":6,"nodeType":"90","endLine":24,"endColumn":37,"suggestions":"92"},{"ruleId":"88","severity":1,"message":"89","line":23,"column":6,"nodeType":"90","endLine":23,"endColumn":37,"suggestions":"93"},{"ruleId":"88","severity":1,"message":"89","line":23,"column":6,"nodeType":"90","endLine":23,"endColumn":37,"suggestions":"94"},{"ruleId":"80","severity":1,"message":"95","line":9,"column":12,"nodeType":"82","messageId":"83","endLine":9,"endColumn":23},{"ruleId":"88","severity":1,"message":"96","line":18,"column":8,"nodeType":"90","endLine":18,"endColumn":10,"suggestions":"97"},{"ruleId":"80","severity":1,"message":"98","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":14},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Coping' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'Fab' is defined but never used.","'EditIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.wellnesTime.length'. Either include it or remove the dependency array.","ArrayExpression",["101"],["102"],["103"],["104"],"'currentWell' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["105"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"106","fix":"108"},{"desc":"106","fix":"109"},{"desc":"106","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [props.wellnessTime, params.id, props.wellnesTime.length]",{"range":"113","text":"114"},{"range":"115","text":"114"},{"range":"116","text":"114"},{"range":"117","text":"114"},"Update the dependencies array to be: [id]",{"range":"118","text":"119"},[702,733],"[props.wellnessTime, params.id, props.wellnesTime.length]",[712,743],[708,739],[674,705],[531,533],"[id]"]