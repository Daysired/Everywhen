[{"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/index.js":"1","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/reportWebVitals.js":"2","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/App.js":"3","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/services/index.js":"4","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Nav.jsx":"5","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Mood.jsx":"6","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Improve.jsx":"7","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Whatworked.jsx":"8","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Highlight.jsx":"9","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Vent.jsx":"10","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Well.jsx":"11","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessTime.jsx":"12","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Date.jsx":"13","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessCard.jsx":"14"},{"size":589,"mtime":1607352987037,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1607114205652,"results":"17","hashOfConfig":"16"},{"size":3078,"mtime":1607541071074,"results":"18","hashOfConfig":"16"},{"size":227,"mtime":1607356314334,"results":"19","hashOfConfig":"16"},{"size":342,"mtime":1607488121120,"results":"20","hashOfConfig":"16"},{"size":3092,"mtime":1607541379410,"results":"21","hashOfConfig":"16"},{"size":1899,"mtime":1607530452614,"results":"22","hashOfConfig":"16"},{"size":2121,"mtime":1607530371033,"results":"23","hashOfConfig":"16"},{"size":1849,"mtime":1607530503308,"results":"24","hashOfConfig":"16"},{"size":1425,"mtime":1607530408940,"results":"25","hashOfConfig":"16"},{"size":1374,"mtime":1607377098466,"results":"26","hashOfConfig":"16"},{"size":1700,"mtime":1607502289226,"results":"27","hashOfConfig":"16"},{"size":291,"mtime":1607541048452,"results":"28","hashOfConfig":"16"},{"size":4039,"mtime":1607543159626,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1oxtwlj",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/index.js",[],["65","66"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/reportWebVitals.js",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/App.js",["67","68"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/services/index.js",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Nav.jsx",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Mood.jsx",["69"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Improve.jsx",["70"],"import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\n\nconst Improve = (props) => {\n  \n  const [improve, setImprove] = useState(\"\");\n  const [negativeEmotions, setNegativeEmotions] = useState(\"\");\n  // const [todo, setTodo] = useState(\"\");\n\n  const history = useHistory();\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find((wellnessTime) => wellnessTime.id === params.id);\n      setImprove(wellnessTime.fields.improve);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const fields = {\n      improve,\n      negativeEmotions,\n    };\n\n    if (params.id) {\n      const improveURL = `${baseURL}/${params.id}`;\n      await axios.put(improveURL, { fields }, config);\n    } else {\n      await axios.post(baseURL, { fields }, config);\n    }\n    props.setToggleFetch((prev) => !prev);\n    history.push(\"/well-time\");\n  };\n\n\n  return (\n    <div>\n      <div Class=\"card\">\n        <form onSubmit={handleSubmit}>\n        <h3>What To Improve</h3>\n          <label htmlFor=\"improve\">What would you change?</label>\n          <input\n            name=\"improve\"\n            type=\"text\"\n            value={improve}\n            onChange={(e) => setImprove(e.target.value)}\n            />\n            <label htmlFor=\"negativeEmotions\">What contributed to any negative emotions?</label>\n          <input\n            name=\"negativeEmotions\"\n            type=\"text\"\n            value={negativeEmotions}\n            onChange={(e) => setNegativeEmotions(e.target.value)}\n          />\n          <button type=\"submit\">Make Entry</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Improve;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Whatworked.jsx",["71"],"import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\n\nconst Whatworked = (props) => {\n  \n  const [whatWorked, setWhatWorked] = useState(\"\");\n  const [wentWell, setWentWell] = useState(\"\");\n  const [feelGood, setFeelGood] = useState(\"\");\n\n  const history = useHistory();\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find((wellnessTime) => wellnessTime.id === params.id);\n      setWhatWorked(wellnessTime.fields.whatWorked);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const fields = {\n      whatWorked,\n      wentWell,\n      feelGood,\n    };\n\n    if (params.id) {\n      const workURL = `${baseURL}/${params.id}`;\n      await axios.put(workURL, { fields }, config);\n    } else {\n      await axios.post(baseURL, { fields }, config);\n    }\n    props.setToggleFetch((prev) => !prev);\n    history.push(\"/well-time\");\n  };\n  \n\n  return (\n    <div>\n        <div>\n          <form onSubmit={handleSubmit}>\n            <h3>What Worked</h3>\n            <label htmlFor=\"whatworked\">What are you proud of?</label>\n            <input\n              name=\"whatworked\"\n              type=\"text\"\n              value={whatWorked}\n              onChange={(e) => setWhatWorked(e.target.value)}\n            />\n            <label htmlFor=\"wentWell\">What went well?</label>\n          <input\n            name=\"wentWell\"\n            type=\"text\"\n            value={wentWell}\n            onChange={(e) => setWentWell(e.target.value)}\n          />\n          <label htmlFor=\"feelGood\">What made you feel good?</label>\n          <input\n            name=\"feelGood\"\n            type=\"text\"\n            value={feelGood}\n            onChange={(e) => setFeelGood(e.target.value)}\n          />\n            <button type=\"submit\">Make Entry</button>\n          </form>\n      </div>\n        \n    </div>\n  );\n}\n\n\nexport default Whatworked;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Highlight.jsx",["72"],"import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\n\nconst Highlight = (props) => {\n  \n  const [highlight, setHighlight] = useState(\"\");\n  const [activities, setActivities] = useState(\"\");\n\n  const history = useHistory();\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find((wellnessTime) => wellnessTime.id === params.id);\n      setHighlight(wellnessTime.fields.highlight);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const fields = {\n      highlight,\n      activities,\n    };\n\n    if (params.id) {\n      const highlightURL = `${baseURL}/${params.id}`;\n      await axios.put(highlightURL, { fields }, config);\n    } else {\n      await axios.post(baseURL, { fields }, config);\n    }\n    props.setToggleFetch((prev) => !prev);\n    history.push(\"/well-time\");\n  };\n\n  return (\n    <div>\n      <div Class=\"card\">\n        <form onSubmit={handleSubmit}>\n        <h3>Highlight</h3>\n          <label htmlFor=\"highlight\">What was the highlight of your day?</label>\n          <input\n            name=\"highlight\"\n            type=\"text\"\n            value={highlight}\n            onChange={(e) => setHighlight(e.target.value)}\n            />\n            <label htmlFor=\"activities\">What activities contributed to your highlight?</label>\n          <input\n            name=\"activities\"\n            type=\"text\"\n            value={activities}\n            onChange={(e) => setActivities(e.target.value)}\n          />\n          <button type=\"submit\">Make Entry</button>\n        </form>\n      </div>\n    </div>\n  );\n}\nexport default Highlight;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Vent.jsx",["73"],"import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\n\nconst Vent = (props) => {\n  \n  const [vent, setVent] = useState(\"\");\n\n  const history = useHistory();\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find((wellnessTime) => wellnessTime.id === params.id);\n      setVent(wellnessTime.fields.vent);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const fields = {\n      vent,\n    };\n\n    if (params.id) {\n      const ventURL = `${baseURL}/${params.id}`;\n      await axios.put(ventURL, { fields }, config);\n    } else {\n      await axios.post(baseURL, { fields }, config);\n    }\n    props.setToggleFetch((prev) => !prev);\n    history.push(\"/well-time\");\n  };\n\n\n  return (\n    <div>\n      <div Class=\"card\">\n        <form onSubmit={handleSubmit}>\n        <h3>VENT THAT SH*T!</h3>\n          <label htmlFor=\"vent\">Vent Away!</label>\n          <input\n            name=\"vent\"\n            type=\"text\"\n            value={vent}\n            onChange={(e) => setVent(e.target.value)}\n          />\n          <button type=\"submit\">Make Entry</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Vent;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Well.jsx",["74","75"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { baseURL, config } from \"../services\";\n\n\nconst Well = (props) => {\n    let { id } = useParams();\n    const [currentWell, setCurrentWell] = useState({});\n\n    // api call for a single item\n    useEffect(() => {\n        let getWell = async () => {\n            let response = await axios.get(`${baseURL}/${id}`, config);\n            setCurrentWell(response.data);\n        };\n        getWell();\n    }, []);\n\n    // Using .find because we only want to return one item\n    let currentWelly = props.wellnessTime.find((wellness) => {\n        return wellness.id === id;\n    });\n    console.log(currentWelly);\n\n   \n    return (\n        <div>\n            {/* {currentWelly.fields && (\n                <div>\n                    <h1>{currentWelly.fields.mood}</h1>\n                    <h4>Highlight: {currentWelly.fields.highlight}</h4>\n                    <h4>Vent: {currentWelly.fields.vent}</h4>\n                    <h4>Coping Strategies: {currentWelly.fields.copingStrategies}\n                    </h4>\n                    <h4>What Worked: {currentWelly.fields.whatWorked}</h4>\n                    <h4>What to Improve: {currentWelly.fields.improve}</h4>\n                </div>\n            )} */}\n        </div>\n    );\n  };\n  \n    export default Well;","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessTime.jsx",["76","77","78","79","80","81","82","83","84","85"],"import React from \"react\";\nimport { Tabs, Tab, AppBar } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Mood from \"./Mood\";\nimport Highlight from \"./Highlight\";\nimport Vent from \"./Vent\";\nimport Whatworked from \"./Whatworked\";\nimport Improve from \"./Improve\";\nimport { Link } from \"react-router-dom\";\nimport \"./WellnessTime.css\"\n\n\nfunction WellnessTime ({handleClick}) {\n  // const [selectedTab, setSelectedTab] = React.useState(0);\n\n  // const handleChange = (event, newValue) => {\n  //   setSelectedTab(newValue);\n  // }\n\n  // return (\n  //   <>\n  //     <AppBar position=\"static\">\n  //       <Tabs value={selectedTab} onChange={handleChange}>\n  //         <Tab label=\"Mood\" />\n  //         <Tab label=\"Highlight\" />\n  //         <Tab label=\"Vent\" />\n  //         <Tab label=\"Whatworked\" />\n  //         <Tab label=\"Improve\" />\n  //       </Tabs>\n  //     </AppBar>\n  //     {selectedTab === 0 && <Mood />}\n  //     {selectedTab === 1 && <Highlight />}\n  //     {selectedTab === 2 && <Vent />}\n  //     {selectedTab === 3 && <Whatworked />}\n  //     {selectedTab === 4 && <Improve />}\n  //   </>\n  // )\n\n\n\n\n \n  return (\n    <div className=\"tabs\">\n      <div onClick ={()=> handleClick('mood')}>\n        <h4>Mood</h4>\n    \t</div>\n  \n      <div onClick={() => handleClick('highlight')}>\n      <h4>Highlight</h4>\n      </div> \n     \n\n      <div onClick={() => handleClick('vent')}>\n       <h4>Vent</h4>\n      </div>\n\n    <div onClick={() => handleClick('whatworked')}>\n        <h4>What Worked</h4>\n    </div>\n\n    <div onClick={() => handleClick('improve')}>\n      <h4>What to Improve</h4> \n      </div>\n      \n   </div>\n  );\n};\n\nexport default WellnessTime;\n\n ","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Date.jsx",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessCard.jsx",["86","87","88","89","90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":12},{"ruleId":"96","severity":1,"message":"100","line":10,"column":8,"nodeType":"98","messageId":"99","endLine":10,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":40,"column":6,"nodeType":"103","endLine":40,"endColumn":37,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"102","line":21,"column":6,"nodeType":"103","endLine":21,"endColumn":37,"suggestions":"105"},{"ruleId":"101","severity":1,"message":"102","line":21,"column":6,"nodeType":"103","endLine":21,"endColumn":37,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"102","line":20,"column":6,"nodeType":"103","endLine":20,"endColumn":37,"suggestions":"107"},{"ruleId":"101","severity":1,"message":"102","line":19,"column":6,"nodeType":"103","endLine":19,"endColumn":37,"suggestions":"108"},{"ruleId":"96","severity":1,"message":"109","line":9,"column":12,"nodeType":"98","messageId":"99","endLine":9,"endColumn":23},{"ruleId":"101","severity":1,"message":"110","line":18,"column":8,"nodeType":"103","endLine":18,"endColumn":10,"suggestions":"111"},{"ruleId":"96","severity":1,"message":"112","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":14},{"ruleId":"96","severity":1,"message":"113","line":2,"column":16,"nodeType":"98","messageId":"99","endLine":2,"endColumn":19},{"ruleId":"96","severity":1,"message":"114","line":2,"column":21,"nodeType":"98","messageId":"99","endLine":2,"endColumn":27},{"ruleId":"96","severity":1,"message":"115","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":20},{"ruleId":"96","severity":1,"message":"116","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":12},{"ruleId":"96","severity":1,"message":"117","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":17},{"ruleId":"96","severity":1,"message":"118","line":6,"column":8,"nodeType":"98","messageId":"99","endLine":6,"endColumn":12},{"ruleId":"96","severity":1,"message":"119","line":7,"column":8,"nodeType":"98","messageId":"99","endLine":7,"endColumn":18},{"ruleId":"96","severity":1,"message":"120","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":15},{"ruleId":"96","severity":1,"message":"121","line":9,"column":10,"nodeType":"98","messageId":"99","endLine":9,"endColumn":14},{"ruleId":"96","severity":1,"message":"122","line":15,"column":8,"nodeType":"98","messageId":"99","endLine":15,"endColumn":17},{"ruleId":"96","severity":1,"message":"117","line":18,"column":8,"nodeType":"98","messageId":"99","endLine":18,"endColumn":17},{"ruleId":"96","severity":1,"message":"118","line":19,"column":8,"nodeType":"98","messageId":"99","endLine":19,"endColumn":12},{"ruleId":"96","severity":1,"message":"119","line":20,"column":8,"nodeType":"98","messageId":"99","endLine":20,"endColumn":18},{"ruleId":"96","severity":1,"message":"120","line":21,"column":8,"nodeType":"98","messageId":"99","endLine":21,"endColumn":15},{"ruleId":"96","severity":1,"message":"100","line":22,"column":8,"nodeType":"98","messageId":"99","endLine":22,"endColumn":12},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Well' is defined but never used.","Identifier","unusedVar","'Date' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.wellnesTime.length'. Either include it or remove the dependency array.","ArrayExpression",["125"],["126"],["127"],["128"],["129"],"'currentWell' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["130"],"'Tabs' is defined but never used.","'Tab' is defined but never used.","'AppBar' is defined but never used.","'makeStyles' is defined but never used.","'Mood' is defined but never used.","'Highlight' is defined but never used.","'Vent' is defined but never used.","'Whatworked' is defined but never used.","'Improve' is defined but never used.","'Link' is defined but never used.","'ShareIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"131","fix":"133"},{"desc":"131","fix":"134"},{"desc":"131","fix":"135"},{"desc":"131","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [props.wellnessTime, params.id, props.wellnesTime.length]",{"range":"139","text":"140"},{"range":"141","text":"140"},{"range":"142","text":"140"},{"range":"143","text":"140"},{"range":"144","text":"140"},"Update the dependencies array to be: [id]",{"range":"145","text":"146"},[1326,1357],"[props.wellnessTime, params.id, props.wellnesTime.length]",[686,717],[690,721],[641,672],[564,595],[531,533],"[id]"]