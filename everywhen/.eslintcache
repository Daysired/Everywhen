[{"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/index.js":"1","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/reportWebVitals.js":"2","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/App.js":"3","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/services/index.js":"4","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Mood.jsx":"5","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Improve.jsx":"6","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Whatworked.jsx":"7","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Highlight.jsx":"8","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Vent.jsx":"9","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessTime.jsx":"10","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessCard.jsx":"11","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Landing.jsx":"12","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/layouts/layout.jsx":"13","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/layouts/nav/Navbar.jsx":"14","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/layouts/nav/Burger.jsx":"15","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/layouts/nav/RightNav.jsx":"16","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/layouts/footer/Footer.jsx":"17"},{"size":589,"mtime":1607352987037,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607114205652,"results":"20","hashOfConfig":"19"},{"size":2672,"mtime":1653864766603,"results":"21","hashOfConfig":"19"},{"size":227,"mtime":1607356314334,"results":"22","hashOfConfig":"19"},{"size":3399,"mtime":1653601080435,"results":"23","hashOfConfig":"19"},{"size":1743,"mtime":1607705441885,"results":"24","hashOfConfig":"19"},{"size":2046,"mtime":1607705540251,"results":"25","hashOfConfig":"19"},{"size":1784,"mtime":1607705418264,"results":"26","hashOfConfig":"19"},{"size":1308,"mtime":1607705485365,"results":"27","hashOfConfig":"19"},{"size":2851,"mtime":1653865894082,"results":"28","hashOfConfig":"19"},{"size":4789,"mtime":1653865089039,"results":"29","hashOfConfig":"19"},{"size":2593,"mtime":1653887446621,"results":"30","hashOfConfig":"19"},{"size":237,"mtime":1653682149098,"results":"31","hashOfConfig":"19"},{"size":986,"mtime":1653604470589,"results":"32","hashOfConfig":"19"},{"size":1288,"mtime":1653597718244,"results":"33","hashOfConfig":"19"},{"size":1776,"mtime":1653757475863,"results":"34","hashOfConfig":"19"},{"size":2007,"mtime":1653682733732,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1mj1463",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/index.js",[],["76","77"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/reportWebVitals.js",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/App.js",["78"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/services/index.js",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Mood.jsx",["79"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport SentimentSatisfiedIcon from \"@material-ui/icons/SentimentSatisfied\";\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\nimport SentimentSatisfiedAltIcon from \"@material-ui/icons/SentimentSatisfiedAlt\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport SentimentVerySatisfiedIcon from \"@material-ui/icons/SentimentVerySatisfied\";\nimport \"./Mood.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function FloatingActionButtons(props) {\n  const classes = useStyles();\n  const [date, setDate] = useState(\"\");\n  const [mood, setMood] = useState(\"\");\n\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find(\n        (wellnessTime) => wellnessTime.id === params.id\n      );\n      setDate(wellnessTime.fields.vent);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    props.handleWellTime(\"date\", date);\n    props.handleWellTime(\"mood\", mood);\n    props.handleClick(\"highlight\");\n  };\n  console.log(props);\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <ul id=\"horizontal-list\">\n            <li className=\"mood-list\">\n              <span onClick={() => setMood(\"Sad\")}>\n                <Fab size=\"large\" color=\"secondary\">\n                  <SentimentDissatisfiedIcon />\n                </Fab>\n              </span>\n            </li>\n\n            <li className=\"mood-list\">\n              <span onClick={() => setMood(\"Happy\")}>\n                <Fab color=\"secondary\">\n                  <SentimentSatisfiedAltIcon />\n                </Fab>\n              </span>\n            </li>\n\n            <li className=\"mood-list\">\n              <span onClick={() => setMood(\"Feeling Good\")}>\n                <Fab color=\"secondary\">\n                  <SentimentSatisfiedIcon />\n                </Fab>\n              </span>\n            </li>\n\n            <li className=\"mood-list\">\n              <span onClick={() => setMood(\"Depressed\")}>\n                <Fab color=\"secondary\">\n                  <SentimentVeryDissatisfiedIcon />\n                </Fab>\n              </span>\n            </li>\n\n            <li className=\"mood-list\">\n              <span onClick={() => setMood(\"Excited\")}>\n                <Fab color=\"secondary\">\n                  <SentimentVerySatisfiedIcon />\n                </Fab>\n              </span>{\" \"}\n            </li>\n          </ul>\n        </div>\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          name=\"date\"\n          type=\"text\"\n          value={date}\n          onChange={(e) => setDate(e.target.value)}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          id=\"button\"\n        >\n          Next\n        </Button>\n      </form>\n    </div>\n  );\n}\n","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Improve.jsx",["80"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./Improve.css\";\n\nconst Improve = (props) => {\n  const [improve, setImprove] = useState(\"\");\n  const [negativeEmotions, setNegativeEmotions] = useState(\"\");\n\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find(\n        (wellnessTime) => wellnessTime.id === params.id\n      );\n      setImprove(wellnessTime.fields.improve);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    props.submitWellTime(improve, negativeEmotions);\n  };\n\n  return (\n    <div>\n      <div Class=\"card\">\n        <form onSubmit={handleSubmit}>\n          <h3>What To Improve</h3>\n          <label htmlFor=\"improve\">What would you change?</label>\n          <input\n            name=\"improve\"\n            type=\"text\"\n            value={improve}\n            onChange={(e) => setImprove(e.target.value)}\n          />\n          <label htmlFor=\"negativeEmotions\">\n            What contributed to any negative emotions?\n          </label>\n          <input\n            name=\"negativeEmotions\"\n            type=\"text\"\n            value={negativeEmotions}\n            onChange={(e) => setNegativeEmotions(e.target.value)}\n          />\n\n          <Button\n            id=\"button\"\n            onClick={handleSubmit}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n          >\n            Submit\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Improve;\n","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Whatworked.jsx",["81"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./Whatworked.css\";\n\nconst Whatworked = (props) => {\n  const [whatWorked, setWhatWorked] = useState(\"\");\n  const [wentWell, setWentWell] = useState(\"\");\n  const [feelGood, setFeelGood] = useState(\"\");\n\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find(\n        (wellnessTime) => wellnessTime.id === params.id\n      );\n      setWhatWorked(wellnessTime.fields.whatWorked);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    props.handleWellTime(\"whatWorked\", whatWorked);\n    props.handleWellTime(\"wentWell\", wentWell);\n    props.handleWellTime(\"feelGood\", feelGood);\n    props.handleClick(\"improve\");\n  };\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <h3>What Worked</h3>\n          <label htmlFor=\"whatworked\">What are you proud of?</label>\n          <input\n            name=\"whatworked\"\n            type=\"text\"\n            value={whatWorked}\n            onChange={(e) => setWhatWorked(e.target.value)}\n          />\n          <label htmlFor=\"wentWell\">What went well?</label>\n          <input\n            name=\"wentWell\"\n            type=\"text\"\n            value={wentWell}\n            onChange={(e) => setWentWell(e.target.value)}\n          />\n          <label htmlFor=\"feelGood\">What made you feel good?</label>\n          <input\n            name=\"feelGood\"\n            type=\"text\"\n            value={feelGood}\n            onChange={(e) => setFeelGood(e.target.value)}\n          />\n        \n          <Button\n            id=\"button\"\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n          >\n            Next\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Whatworked;\n","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Highlight.jsx",["82"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./Highlight.css\";\n\nconst Highlight = (props) => {\n  const [highlight, setHighlight] = useState(\"\");\n  const [activities, setActivities] = useState(\"\");\n\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find(\n        (wellnessTime) => wellnessTime.id === params.id\n      );\n      setHighlight(wellnessTime.fields.highlight);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    props.handleWellTime(\"highlight\", highlight);\n    props.handleWellTime(\"activities\", activities);\n    props.handleClick(\"vent\");\n  };\n\n  return (\n    <div>\n      <div Class=\"card\">\n        <form onSubmit={handleSubmit}>\n          <h3>Highlight</h3>\n          <label htmlFor=\"highlight\">What was the highlight of your day?</label>\n\n          <input\n            name=\"highlight\"\n            type=\"text\"\n            value={highlight}\n            onChange={(e) => setHighlight(e.target.value)}\n          />\n          <label htmlFor=\"activities\">\n            What activities contributed to your highlight?\n          </label>\n\n          <input\n            name=\"activities\"\n            type=\"text\"\n            value={activities}\n            onChange={(e) => setActivities(e.target.value)}\n          />\n\n          <Button\n            id=\"button\"\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n          >\n            Next\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default Highlight;\n","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Vent.jsx",["83"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./Vent.css\";\n\nconst Vent = (props) => {\n  const [vent, setVent] = useState(\"\");\n\n  const params = useParams();\n\n  useEffect(() => {\n    if (params.id && props.wellnesTime.length > 0) {\n      const wellnessTime = props.wellnessTime.find(\n        (wellnessTime) => wellnessTime.id === params.id\n      );\n      setVent(wellnessTime.fields.vent);\n    }\n  }, [props.wellnessTime, params.id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    props.handleWellTime(\"vent\", vent);\n    props.handleClick(\"whatWorked\");\n  };\n\n  return (\n    <div>\n      <div Class=\"card\">\n        <form onSubmit={handleSubmit}>\n          <h3>VENT THAT SH*T!</h3>\n          <label htmlFor=\"vent\">Vent Away!</label>\n          <input\n            name=\"vent\"\n            type=\"text\"\n            value={vent}\n            onChange={(e) => setVent(e.target.value)}\n          />\n          <Button\n            id=\"button\"\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n          >\n            Next\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Vent;\n","/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessTime.jsx",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/WellnessCard.jsx",["84","85"],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/components/Landing.jsx",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/layouts/layout.jsx",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/layouts/nav/Navbar.jsx",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/layouts/nav/Burger.jsx",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/layouts/nav/RightNav.jsx",[],"/Users/daisy/general_assembly/sei/garnet/unit_2/P2/Everywhen/everywhen/src/layouts/footer/Footer.jsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":55,"column":9,"nodeType":"92","messageId":"93","endLine":55,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":39,"column":6,"nodeType":"96","endLine":39,"endColumn":37,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"95","line":20,"column":6,"nodeType":"96","endLine":20,"endColumn":37,"suggestions":"98"},{"ruleId":"94","severity":1,"message":"95","line":21,"column":6,"nodeType":"96","endLine":21,"endColumn":37,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"95","line":20,"column":6,"nodeType":"96","endLine":20,"endColumn":37,"suggestions":"100"},{"ruleId":"94","severity":1,"message":"95","line":19,"column":6,"nodeType":"96","endLine":19,"endColumn":37,"suggestions":"101"},{"ruleId":"90","severity":1,"message":"102","line":17,"column":8,"nodeType":"92","messageId":"93","endLine":17,"endColumn":12},{"ruleId":"94","severity":1,"message":"103","line":58,"column":6,"nodeType":"96","endLine":58,"endColumn":8,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.wellnesTime.length'. Either include it or remove the dependency array.","ArrayExpression",["107"],["108"],["109"],["110"],["111"],"'Grid' is defined but never used.","React Hook useEffect has missing dependencies: 'emojis' and 'props.cardInfo.fields.mood'. Either include them or remove the dependency array. If 'setEmoji' needs the current value of 'props.cardInfo.fields.mood', you can also switch to useReducer instead of useState and read 'props.cardInfo.fields.mood' in the reducer.",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"113","fix":"115"},{"desc":"113","fix":"116"},{"desc":"113","fix":"117"},{"desc":"113","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [props.wellnessTime, params.id, props.wellnesTime.length]",{"range":"121","text":"122"},{"range":"123","text":"122"},{"range":"124","text":"122"},{"range":"125","text":"122"},{"range":"126","text":"122"},"Update the dependencies array to be: [emojis, props.cardInfo.fields.mood]",{"range":"127","text":"128"},[1313,1344],"[props.wellnessTime, params.id, props.wellnesTime.length]",[609,640],[659,690],[609,640],[527,558],[2046,2048],"[emojis, props.cardInfo.fields.mood]"]